import typer
import asyncio
import json
from exportador import exportar_views_para_excel, listar_views

app = typer.Typer()

@app.command()
def exportar(cliente: str):
    """Exporta views espec√≠ficas de um cliente para arquivos Excel"""
    with open("clientes.json", "r") as f:
        config = json.load(f)

    if cliente not in config:
        typer.echo(f"‚ùå Cliente '{cliente}' n√£o encontrado.")
        raise typer.Exit()

    dados_conexao = config[cliente]

    views_disponiveis = asyncio.run(listar_views(dados_conexao))

    if not views_disponiveis:
        typer.echo("‚ö†Ô∏è Nenhuma view encontrada.")
        return

    typer.echo("üìã Views dispon√≠veis:")
    for i, view in enumerate(views_disponiveis, 1):
        typer.echo(f"{i}. {view}")

    selecao = typer.prompt("Digite os n√∫meros das views desejadas separados por v√≠rgula (ex: 1,3,4)")
    try:
        indices = [int(i.strip()) - 1 for i in selecao.split(",")]
        views_escolhidas = [views_disponiveis[i] for i in indices if 0 <= i < len(views_disponiveis)]
    except Exception:
        typer.echo("‚ùå Entrada inv√°lida.")
        raise typer.Exit()

    if not views_escolhidas:
        typer.echo("‚ùå Nenhuma view selecionada.")
        return

    asyncio.run(exportar_views_para_excel(dados_conexao, views_escolhidas))
    typer.echo("‚úÖ Exporta√ß√£o conclu√≠da.")

if __name__ == "__main__":
    app()
